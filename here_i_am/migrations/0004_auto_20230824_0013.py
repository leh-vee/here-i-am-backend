# Generated by Django 4.2.4 on 2023-08-24 00:13

from django.db import migrations
from django.contrib.gis.geos import GEOSGeometry
import json

def upload_street_segment_features(apps, schema_editor):
    StreetSegment = apps.get_model('here_i_am', 'StreetSegment')
    Intersection = apps.get_model('here_i_am', 'Intersection')

    with open('here_i_am/data/toronto-centreline.geojson') as data_file:
        segments_json = json.load(data_file)
        features = segments_json['features']
        for feature in features:
            properties = feature['properties']
            properties['from_intersection'] = get_model_by_id_or_none(Intersection, properties.pop('from_intersection_id'))
            properties['to_intersection'] = get_model_by_id_or_none(Intersection, properties.pop('to_intersection_id'))
            properties['geom'] = GEOSGeometry(json.dumps(feature['geometry']))
            StreetSegment(**properties).save()

def get_model_by_id_or_none(model, id):
    try:
        instance = model.objects.get(pk=id)
        return instance
    except model.DoesNotExist:
        return None

def delete_all_street_segments(apps, schema_editor):
    StreetSegment = apps.get_model('here_i_am', 'StreetSegment')
    StreetSegment.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('here_i_am', '0003_streetsegment'),
    ]

    operations = [
        migrations.RunPython(upload_street_segment_features, delete_all_street_segments),
    ]

